fibsrch : fibonaccian search in c manolis lourakis institute of computer science , foundation for research and technology - hellas , heraklion , crete , greece last updated dec. 21 , 2005 [ the algorithm : : highlighted source code : : what 's new ? : : download code : : contact address ] * new * : version 1.1 is out ! fibonaccian search , also referred to as fibonacci search , is a divide-and-conquer algorithm for searching a sorted array by narrowing possible locations to progressively smaller intervals. these intervals are determined with the aid of the fibonacci numbers . note , however , that the term fibonacci search is also used to describe a technique that locates the minimum of a unimodal function in a given interval ( see this , for example ) ; this page is not concerned with that problem . this page provides a c implementation of the fibonaccian search algorithm , as defined above. the fibonaccian search algorithm has time complexity of o ( log ( n ) ) and , due to its access pattern for the array elements , is much faster compared to the traditional binary search when the arrays being searched are large. in such cases , the cost of reading array elements depends critically on the dispersion of their storage locations , since reads involving large “ jumps ” in the array require considerably more time to complete. typical examples include searching magnetic tapes and large arrays that do not fit in cache or ram. the fibonaccian search algorithm is quite old : a description of it in cacm dates back to 1960 . surprisingly though , i 've been unable to find a public c implementation for it , that 's why i have set up this page . the source code included here is distributed under the gnu general public license ( gpl ) . the algorithm let f k represent the k-th fibonacci number where f k + 2 = f k + 1 + f k 0 = 0 , f 1 = 1. to test whether an item is in a list of n = f m ordered numbers , proceed as follows : set k = m . if k = 0 , finish - no match . test item against entry in position f k-1 . if match , finish . if item is less than entry f k-1 , discard entries from positions f k-1 + 1 to n . set k = k - 1 and go to 2 . if item is greater than entry f k-1 , discard entries from positions 1 to f k-1 . renumber remaining entries from 1 to f k-2 , set k = k - 2 and go to 2 . if n is not a fibonacci number , then let f m m -n numbers larger than the sought item and apply the above algorithm for n ' = f m . a c implementation of the fibonaccian search algorithm is shown below. you can scroll through it while keeping the above pseudocode visible . highlighted source code what 's new ? dec. 21 , 2005 : comments in fibsrch.c were slightly modified to bring them in sync with the code . download code the source code is distributed in a gzip'ed tar file. it has been tested under linux with gcc / lcc and under windows with msvc . refer to the end of fibsrch.c for an example of using fibsrch ( ) ; remember to include fibsrch.h before calling it from your code . contact address if you find this code useful or have any comments/questions/suggestions , please contact me at . [ the algorithm : : highlighted source code : : what 's new ? : : download code : : contact address ] start of statcounter code end of statcounter code hits since mon dec 5 15 : 06 : 24 eet 2005
