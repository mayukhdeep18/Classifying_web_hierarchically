ternary search trees jon bentley and robert sedgewick feature article in dr. dobbs journal april , 1998 abstract when you have to store a set of strings , what data structure do you use ? jon and bob suggest one place you can start is with ternary search trees , which combine the time efficiency of digital tries with the space efficiency of binary search trees . online version of article at dr. dobbs website demonstration program ( .c ) fast algorithms for sorting and searching strings jon bentley and robert sedgewick presented at eighth annual acm-siam symposium on discrete algorithms new orleans , january , 1997 abstract we present theoretical algorithms for sorting and searching multidimensional data and practical c implementations for the application where keys are character strings. the sorting algorithm , an amalgam of quicksort and radix sort , is competitive with the best known c sort codes. the searching algorithm , an amalgam of tries and binary search trees , is faster than hashing and other commonly used search methods. the basic ideas behind the algorithms date back at least to the 1960s , but their practical utility has been overlooked. analytic results and extensions to more difficult string processing problems are also included . soda paper ( .pdf ) soda paper ( .ps ) overhead transparencies from soda talk ( .ps ) demonstration program ( .c ) demonstration program ( .c ) sample data ( dictionary ) sample data ( library call numbers ) comments , questions , suggestions : mail rs @ cs.princeton.edu mail jlb @ research.bell-labs.com copyright ( c ) 1998 , robert sedgewick and jon bentley
