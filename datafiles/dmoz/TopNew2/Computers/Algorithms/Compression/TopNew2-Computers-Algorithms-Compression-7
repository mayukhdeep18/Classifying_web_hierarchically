image compression introduction classifying image data quantization bit allocation entropy coding source code back to main page an introduction to image compression compressing an image is significantly different than compressing raw binary data. of course , general purpose compression programs can be used to compress images , but the result is less than optimal. this is because images have certain statistical properties which can be exploited by encoders specifically designed for them . also , some of the finer details in the image can be sacrificed for the sake of saving a little more bandwidth or storage space. this also means that lossy compression techniques can be used in this area. lossless compression involves with compressing data which , when decompressed , will be an exact replica of the original data. this is the case when binary data such as executables , documents etc. are compressed. they need to be exactly reproduced when decompressed. on the other hand , images ( and music too ) need not be reproduced 'exactly'. an approximation of the original image is enough for most purposes , as long as the error between the original and the compressed image is tolerable. error metrics two of the error metrics used to compare the various image compression techniques are the mean square error ( mse ) and the peak signal to noise ratio ( psnr ) . the mse is the cumulative squared error between the compressed and the original image , whereas psnr is a measure of the peak error. the mathematical formulae for the two are mse = psnr = 20 * log10 ( 255 / sqrt ( mse ) ) where i ( x,y ) is the original image , i ' ( x,y ) is the approximated version ( which is actually the decompressed image ) and m,n are the dimensions of the images. a lower value for mse means lesser error , and as seen from the inverse relation between the mse and psnr , this translates to a high value of psnr. logically , a higher value of psnr is good because it means that the ratio of signal to noise is higher. here , the 'signal ' is the original image , and the 'noise ' is the error in reconstruction. so , if you find a compression scheme having a lower mse ( and a high psnr ) , you can recognise that it is a better one. the outline we 'll take a close look at compressing grey scale images. the algorithms explained can be easily extended to colour images , either by processing each of the colour planes separately , or by transforming the image from rgb representation to other convenient representations like yuv in which the processing is much easier. the usual steps involved in compressing an image are specifying the rate ( bits available ) and distortion ( tolerable error ) parameters for the target image. dividing the image data into various classes , based on their importance. dividing the available bit budget among these classes , such that the distortion is a minimum. quantize each class separately using the bit allocation information derived in step 3. encode each class separately using an entropy coder and write to the file. remember , this is how 'most ' image compression techniques work. but there are exceptions. one example is the fractal image compression technique , where possible self similarity within the image is identified and used to reduce the amount of data required to reproduce the image. traditionally these methods have been time consuming , but some latest methods promise to speed up the process. literature regarding fractal image compression can be found at < findout > . reconstructing the image from the compressed data is usually a faster process than compression. the steps involved are read in the quantized data from the file , using an entropy decoder. ( reverse of step 5 ) . dequantize the data. ( reverse of step 4 ) . rebuild the image. ( reverse of step 2 ) . details details about classifying image data ( using the discrete wavelet transform ) . details about bit allocation ( using the rate-distortion optimization procedure ) . details about quantization . details about entropy coding . some interesting sites fractal image encoding at http : //inls.ucsd.edu/y/fractals/ . contains a real lot of interesting papers and software related to fractal image encoding . compression newsgroup at comp.compression wavelet image compression kit at http : //www.geoffdavis.net/dartmouth/wavelet/wavelet.html image compression at http : //www.iee.et.tu-dresden.de/ ~ franz/image1.html back to main page classifying image data copyright ( c ) satish kumar. s 2001-2003. last modified - 22 oct 2001 suggestions/broken links/queries ? write to satish @ debugmode.com
