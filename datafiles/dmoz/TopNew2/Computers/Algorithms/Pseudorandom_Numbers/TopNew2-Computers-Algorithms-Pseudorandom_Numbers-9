honeylocust_header ( ) ? > rngpack 1.1a nov 6 , 2003 -- rngpack 1.1 released rngpack 1.1a fixes a number of serious bugs in rngpack 1.0 including an incorrect coefficient in the ranecu implementation and an off-by-one error in the choice ( ) method. rngpack 1.1a supports java serialization , adds a coin ( ) method to get true/false coin tosses , adds a synchronized wrapper and includes a new generator , the mersenne twister. all rngpack users should upgrade to rngpack 1.1a. rngpack 1.1a is now available under a bsd license . see the changelog , java class documentation , or download source code in tar.gz or zip format . what is rngpack ? rngpack is a pseudorandom number generator package for java. pseudorandom means that the " random " numbers are generated by a deterministic mathematical process , not by a fundamentally random physical process such as radioactive decay or johnson noise. rngpack contains base classes that add value to random number generators , four research grade generators , as well as a wrapper for java 's built in random number generator and a demonstration application. rngpack comes with java class documentation. because rngpack is a set of java classes it can be used in both applications and in applets. rngpack is available under the bsd license . what is rngpack good for ? rngpack is good for research applications : the ranlux , ranmar , ranecu and the mersenne twister generators are strong generators used for research applications where billions and billions of numbers with low statistical correlations are required. theoretical studies and practical tests have been made on all four generators , and all generators have a history of use in research . all four generators are portable ; given a particular seed , they generate the same numbers on every machine and produce the same numbers as fortran implementations. the four research-grade generators all work with java object serialization . entertainment/industrial applications : most of our generators run faster than math.random ( ) in our tests. because rngpack is object-oriented and easy to use , it may be of interest to people who want smaller numbers of moderate quality numbers . what is n't rngpack good for ? rngpack is not reccomended for security/cryptography applications : the generators in rngpack were designed to have no statistical correlations that would affect large- scale simulations. they were not designed to be inscrutable to a mathematically inclined codebreaker. i do n't reccomend that you use rngpack or math.random ( ) for cryptography -- instead you should use algorithms that were designed and tested specifically for that purpose. jdk 1.1 contains a secure random number generator designed for cryptography. probably the best method of key generation available today is the /dev/random device built into linux , solaris and some other operating systems . comparison of generators ( time is time to generate 10,000,000 numbers on a 300 mhz linux computer running the sun jdk 1.4.2_02 ) name period time ( no jit / jit ) special properties ranlux 10 171 14.7 s ranlux allows the user to adjust the " luxury level " from 0 to 4 to trade speed for quality. at levels 3 and 4 ranlux is a large advance in quality over previous generators ranmar 10 43 4.2 s each ranmar seed within it 's range produces a unique sequence ; by splitting up the seed space , collaborating researchers can ensure that they produce sequences that do not overlap . ranecu 10 18 5.8 s ranecu is an advanced multiplicative linear congruential generator . ranmt 2 19937 -1 7.1 s the mersenne twister has an exceptionally long period and is known to be well-distributed in 632-dimensional lag space . randomjava ? 8.0 s randomjava wraps up the math.random ( ) method that comes with java. not reccomended for general use . download download rngpack 1.1 asource code as a gzip-tar file or as a zip file . rngpack is free under a bsd licence . if you use rngpack in a project , please send me an e-mail so i can send you news of updates. i 'd be interested in working with anyone who is interested in improving the code and incorporating the improvements into future versions . addthis bookmark button begin addthis bookmark button end = honeylocust_trailer ( ) ? >
