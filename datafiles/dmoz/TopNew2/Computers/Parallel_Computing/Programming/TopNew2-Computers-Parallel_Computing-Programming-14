this page uses the font element and uses size in the hr element . these are both netscape specific but should just be ignored by other browsers ( hopefully ) . otherwise it is fully compatible with html 2.0 click on any of the above . nesl : a parallel programming language nesl is a parallel language developed at carnegie mellon by the scandal project. it integrates various ideas from the theory community ( parallel algorithms ) , the languages community ( functional languages ) and the system 's community ( many of the implementation techniques ) . the most important new ideas behind nesl are nested data parallelism : this feature offers the benefits of data parallelism , concise code that is easy to understand and debug , while being well suited for irregular algorithms , such as algorithms on trees , graphs or sparse matrices ( see the examples above or in our library of algorithms ) . a language based performance model : this gives a formal way to calculated the work and depth of a program. these measures can be related to running time on parallel machines . the main emphasis in the design of nesl was to make parallel programming easy and portable. algorithms are typically significantly more concise in nesl than in most other parallel programming languages. furthermore the code closely resembles high-level pseudocode. here is a comparison of a parallel quicksort in nesl and mpi ( 10 lines of code vs. 1700 ) . of course this comes at the cost of placing more responsibility on the compiler and runtime system for achieving good efficiency . an interactive tutorial and overview papers on nesl a library of parallel algorithms algorithm animations an online interpreter what is nesl used for ? getting the current release quick reference guide nesl currently runs on unix workstations , the ibm sp-2 , the thinking machines cm5 , the cray c90 and j90 , the maspar mp2 , and the intel paragon. our recent effort has been on an portable mpi back end , and an implementation for symmetric multiprocessors , such as the sgi power challenge or the dec alphaserver . nesl is loosely based on the programming language ml . papers on nesl a complete list of nesl related papers can be found in our list of publications . here is an annotated bibliography of the papers that are most relevant to nesl . programming parallel algorithms . describes and motivates the two main ideas behind nesl , nested data parallelism and the language based performance model . it appears in cacm , mar 1996 . implementation of a portable nested data-parallel language . outlines the current implementation of nesl and gives some performance numbers on a variety of parallel machines. it appears in jpdc , nov 1994 . nesl : a nested data-parallel language . the language definition , including a complete list of functions. it does not contain the operational semantics ( see below ) . nesl user 's manual . describes how to set up the nesl environment and how to use the various features in nesl ( such as tracing , profiling and using remote machines ) . a provable time and space efficient implementation of nesl . includes the operational semantics of nesl and a proof that the work and depth bounds can be mapped into running time on various machine models . what is nesl used for ? teaching : we have found nesl very useful for teaching parallel algorithms. it has allowed us to do give out homework assignments with significantly more interesting problems than would be possible with other languages. for example here is a homework assignment on the finite-volume method for fluid flow . this involves setting up the problem using the delaunay triangulation of an unstructured mesh , and then solving it using the conjugate gradient technique on an irregular sparse matrix. this is a two week assignment. other assignments include finding all-closest-pairs in the plane and shortest paths in a graph . here is a course on parallel algorithms for which we use nesl . algorithm experimentation : we have used nesl extensively for running experiments on algorithms. in particular it has allowed us to quickly compare the work required by various algorithms and improve the algorithms . here are some of the algorithms we have experimented with using nesl : delaunay triangulation : we have run experiments on a variety of parallel algorithms for planar delaunay triangulation and have developed a practical variant of an algorithm of edelsbrunner and shi. this work is described in the paper developing a practical projection-based parallel delaunay algorithm which appears in the the proceedings of the acm symposium on computational geometry , may 1996 . the n-body problem : we have compared three algorithms for the n-body problem : the barnes-hut , greengard 's algorithm and a hybrid. all three were code in nesl and the relative costs under various assumptions were studied. this work is described in the paper a practical comparison of n-body algorithms which appears in the proceedings of the dimacs implementation challenge workshop , october 1994 . graph connectivity we have compared several algorithms for graph connectivity and derived a hybrid technique which appears very promising. this work is described in the paper a comparison of data-parallel algorithms for connected components which appears in the proceedings of the acm symposium on parallel algorithms and architectures , june 1994 . others : other algorithms experiments that have used nesl include a comparison of graph separators and the development of a support tree conjugate gradient technique . algorithm animation : nesl is very well suited for developing animations of parallel algorithms. all the animations on the algorithm animations page are fully written in nesl as is the pittsburgh map server. nesl has a well developed library of window routines. many were specifically designed with animations in mind. also , the execution image for the animations can be quite small requiring little effort on the part of the host machine. even though the full nesl image is large , only the intermediate code ( vcode ) along with the vcode interpreter is required to run a nesl applications . the development of nesl was funded in part by nsf under an nyi ( award ccr-9258525 ) . blelloch @ cs.cmu.edu . comments welcome !
