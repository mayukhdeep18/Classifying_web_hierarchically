other pages [ home | project page | test risc os binaries ] on this page [ introduction | current state | download | helping out | distribution | useful links | mailing list ] riscose : introduction riscose is a project to write an emulator for the whole of risc os at the swi level , allowing applications originally written for it to run unmodified on other operating systems without needing any risc os rom code . goals are speed , compatibility and portability in that order. this page is probably only interesting to people who have programmed risc os ; at least until the project gets somewhere . the way i 'm developing it is to take a ` target ' risc os program ; in the first case , darren salt 's port of grep. there 's already an arm and memory emulation in place ( largely thanks to arm ltd 's armulator ) , and i run the risc os program through the armulator until it hits an unemulated swi. i emulate the swi by patching some c into my swi handling framework , run the program again , see where it stops... until hopefully the program runs. then we try a more complicated program , rinse , repeat etc. until zap and artworks run , and then we all go for a beer . what state 's it in ? there 's the sourceforge project page where you can grab the latest code out of cvs ( or a .tar.gz snapshot ) , or you can read the diary : 03/02/2002 ralph and carl have been edging towards integrating oslib 's swi definition language into the riscose build tree , so that implementing swis is as simple as writing and linking in a function with the correct name. carl has already added a patch for dynamic swi registration , which is an important step along the way to having dynamically loadable 'native ' risc os modules . 13/12/2001 finally i 've got riscose to run well enough so that norcroft cc and acorn 's linker can put together a risc os program from sources , and then run the resulting output ! or at least it can do hello world okay , i 've not tried much else. but it 's encouraging after so many months of very slow development to have something tangible. merry christmas , and here 's to some more frequent updates. also nb that in the preceeding months , i 've let ralph corduroy start to check things in himself when i 'm up to my neck , and he 's very keen to streamline the build process and generally clear up my mess , which i 'm very grateful for : ) 31/07/2001 too little , too late , but at least it 's something ! i 've uploaded the fruits of some source reorganising without fixing the bugs i 'd promised to. but life is slowly settling , so i 'll be making an effort to work on it over the next couple of weeks . 30/05/2001 okay , okay , so another five months with bugger all done. but in case you did n't know , chris rutter died in march , and this is bit of a blow , both personally and for the project. i 've got my university finals in about five days , after which i 'm moving to york and starting a consultancy firm with a couple of friends. but the plan is for life to settle down a bit , for me to have some more free time to work on this. i did actually spend a few days about a month ago re-organising the source code for easier maintainence & contribution , and i 'll check this in once i 've had an evening to fix the bugs i 've introduced ( or discovered ) . see you back here with an update in about a month , i hope . 25/12/2000 merry christmas ! and not a bloody line written on riscose in a while-- humph , well , i need a job to afford all those christmas pressies : - ) i 'm graduating in six months ' so i guess if nothing happens 'til then , nobody is going to be surprised. still , i 've had plenty of ideas and the odd chat with chris , and it 's not as if risc os is a moving target... but i 'm still keen on the project and will get back to it once i 've cleared a few things from my plate . 08/08/2000 just got back from a very geeky holiday ! merged in a patch from chris that fixes sleeve , so it now works as reliably as the armulator , and quite a bit quicker too. just see the top of the makefile to choose between the two emulations . 28/07/2000 the build system is a little more settled now ( one easy to set-up makefile which should do us for a while ) and phil wrote another patch to run riscose on a linux box with a real arm in it. later on... bored fixing the c library so for now am having a go at getting real risc os modules working as tasks , providing swis etc. since basic emulation is probably going to be a long time in coming : - ) 27/07/2000 i 've merged in phil blundell 's first stab at a vdu driver for text-mode stuff ; it might run twin now if we 're lucky , but i could n't find a copy of the program to test. also re-organised the build so that arm emulations are switchable : even though there 's only one at the moment , sleeve nearly works with it and phil is trying to get it going on a real armlinux box , so we 'll have three types of arm pretty soon. finally i 've added the start of an emulation of the risc os file structure which is currently causing so much grief ( see clib_file.c/h ) . 23/07/2000 i 've been idle for a few days while alice has been visiting , but chris rutter has been working on a replacement arm emulation ( called sleeve ... groan... ) and nick burrett has given me permission to distribute a similar project of his which can run gcc ; it 's available here . i 'll probably be stealing some code from it quite soon : - ) 19/07/2000 right , it 's probably safe to release now... go get it from cvs on the sourceforge project page and help me out ! there 's another page where i 've put some of the risc os binaries i 've been using to test the code so far . 18/07/2000 got a bit distracted by trying to hack the playstation with one of those cheat cartridges ( not much headway there just yet : ) ) but riscose is oh-so-nearly running norcroft ` cc'-- it gets as far as reading in the source of helloworld.c , and outputting the start of an object file before giving me back ` compilation abandoned ' , plus a load of quotation marks , giving me the impression that printf is broken : - ) on the bright side , the heap manager seems to work and i 've got a load more of sharedclibrary taped ( though i 'll have to integrate what i 've done here with my embryonic os_file ) . anyhow 24hrs before alice turns up and distracts me from all this until the weekend , so i 'll probably release it tomorrow night sometime . 15/07/2000 wow , it actually runs a simple test program i compiled on the risc pc , but now i ca n't avoid it any longer... i 've got to write a heap manager ! ( cue groans , whimpers , sobs ) . this task was brought on by my assumption that programs would not deference file * pointers , and anything linked against unixlib ( that 's grep ) needs to in order to implement fstat ( ) and friends. but i feel the grand cvs import is going to happen soon . 14/07/2000 progressing a lot faster now-- thanks to robin watts i 've got the stack set up properly ( well enough to fool grep anyway ) but thanks also to robin for teasing me with what happens next in silent hill , and making me spend another 2 hours playing it today instead of hacking : - ) well it 's now calling fopen ( ) , and so i presume it 's finally about to do some real work ! right , off to watch friends + south park + frasier , with a cup of tea , then back to it.. . 13/07/2000 feeling more confident about the framework now : i 'm still trying to understand the apcs and the way a program uses the sharedclibrary from its inception , but i 'm starting to get calls to ` real ' library functions like strrchr rather than all this arsing around with root stack chunks. i presume it 's starting to parse the command line. hurrah ! downloading riscose before you download , be aware that it probably wo n't do anything remotely useful at the moment , and you 'll almost certainly want to be a developer interested in hacking at it . get the nightly code snapshot if you just want a quick look . follow these instructions if you want to keep an up-to-date source tree from cvs . helping out if you want to help out , you 'll probably need access to a risc os machine of some sort ( unless you 're feeling very cocky ) , a copy of the risc os programmer 's reference manual or the stronghelp editied edition of the same ( unless you 've got a very good memory ) and a little time to spare. join the mailing list , and if you want to submit a patch , check the project page for the patch manager. obviously before starting on any major work , ask on the mailing list to see whether you 'll be duplicating anyone else 's effort . terms of distribution as hinted at on the sourceforge project page , riscose can be distributed either in source or binary form under the terms of the gnu public license . useful links sleeve is the arm emulation developed by chris rutter which will soon be the preferred core for riscose ; risc os ltd. ( who , at the time of writing , have fewer full-time programmers working on their product than this project has : - ) ) rox is a risc os-type desktop environment for linux machines , mimicking the look + feel ( including a filer clone and other goodies ) rather than doing any emulation ; darren salt 's web pages featuring ports of many gnu tools , which i 'm planning to use for testing zap , the risc os programmers editor and swiss-army knife which has been described as ` better than sex ' sourceforge , the generous people who host this site dave gilbert 's web site , a guy who 's already written a hardware-level emulation of an archimedes robin watts has all sorts of interesting documents on his web page , not least an arm processor cheat sheet phil blundell has done some experiments to make risc os binaries run under armlinux and wrote a program and kernel patch that runs twin sourceforge are the generous people who host this site . swarm is another arm emulation , written in c + + armphetamine is another arm emulation ( dynamically recompiling , no less ) this times optimised for speed. i 'd have used it instead of the armulator but it looks complicated at the moment : - ) brandy is a reimplementation of bbc basic v in ansi c , and ripe for integrating into riscose one day . ! virtual is a risc os program that traps just enough swis to allow risc os compilers to believe they have virtual memory available. a neat trick , and a prototype of what we 're trying to achieve here : - ) mailing list if you want to chat about it , or help development , or at least know when there 'll be some code released , mail riscose-subscribe @ lists.soup-kitchen.net to subscribe to the mailing list . matthew bloch , mattbee @ soup-kitchen.net
