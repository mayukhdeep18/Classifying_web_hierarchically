< div style = " width : 100 % ; text-align : center " > < a href = " http : //www.riscoslondonshow.co.uk " > < img border = " 0 " width = " 326 " height = " 60 " src = " http : //www.riscoslondonshow.co.uk/bnnr/bnnr2013h.png " > < /a > < /div > rpcemu rpcemu emulates an acorn risc pc and a7000 on multiple platforms including windows , linux and mac os x introduction documentation downloads release notes developer information introduction rpcemu allows you to emulate classic acorn systems , such as the risc pc and a7000 , on multiple platforms including windows , linux and mac os x rpcemu requires a risc os rom image to work , find details of where to find one . rpcemu should be considered alpha quality code. it has many known and unknown bugs , and all files used with it should be well backed up before using them with rpcemu . documentation the following documents are available here . user manual - all platforms . using rool risc os 5 - all platforms . tutorial - installing rpcemu and risc os 3.71 on windows - on 4corn . how to compile from source - windows how to compile from source - linux/unix ( advanced ) tutorial - running rpcemu as the phoebe risc pc 2 - on 4corn . if you have any questions or need help , there is a rpcemu mailing list , however please specify the version number to avoid confusion. your patches , suggestions and even bug reports are gratefully received . downloads binary packages ( version 0.8.11 ) format notes windows xp/vista/7/8 windows installer recommended. run the provided .msi file. adds links into you 'start ' menu. note : upgrading from previous versions may overwrite your cmos.ram and rpc.cfg files . zip archive install to the location of your choice . source code ( version 0.8.11 ) format notes all platforms source code contributed builds format notes mac os x universal binary rpcemu-spoon-0.8.9-fjd-beta.zip . a 0.8.9 universal binary for x86 and powerpc. it should run on mac os x 10.7 and other versions , but please test " i 've only lightly tested it , so success or failure reports are appreciated , particularly if you 're running a different version of os x from me ( i 'm on 10.7.2 ) . " . ( francis devereux ) rpcemu bootable cd puppy binary a 0.8.6 binary to update the puppy linux live cd . ( paul stewart ) previous releases additional downloads format blank pre-formatted hard discs adfs e 256mb 1gb adfs e + ( long filenames , risc os 3.80 or later only ) 256mb 1gb blank pre-formatted floppy discs adfs e 800kb all downloads in zip format , decompress before use. no download is larger that 1mb . release notes full changelog not all features are available on all platforms , check the matrix below for details linux solaris windows mac os x networking y n y n version 0.8.11 - 23/10/2013 changes in this build all platforms support for emulating phoebe , the risc pc 2. produced with the assistance of the centre for computing history . instructions on how to setup phoebe emulation and the required files are on the 4corn website . http : //www.4corn.co.uk/articles/phoebe/ note , this is a prototype machine , so is more for historical interest than running production code . introduced the concept of configuring the hardware model rather than using cpu type to determine hardware. see the settings- > settings window for details. you may need to reselect a model based on your previous cpu choice . fix very rare bug in which the mips count was sometimes wildly incorrect . windows fix 'follows host mouse ' bug , where the host and emulated mouse pointers were not lined up until the rpcemu window had been moved . fix network gui bug where the selected networking type was not correctly set . version 0.8.10 - 27/3/2013 changes in this build all platforms fix bug in emulation of smlal instruction in 32-bit dynarec . fix bug in emulation of unaligned str with writeback in 32-bit dynarec . fix bug in emulation of ldr/ldrb with writeback in both 32-bit and 64-bit dynarec . extensive code-refactoring enabling the above fixes , and in preparation for future improvements . windows host cd-rom drives now appear correctly in the cd-rom submenu . linux a program icon has been added to the main window . version 0.8.9 - 1/1/2012 changes in this build all platforms add support for emulation of 256 mb of ram - the maximum possible in the risc pc and a7000 architecture . a new option to reduce cpu usage. by enabling this menu option , rpcemu will attempt to reduce its cpu usage by utilising the 'idle ' feature of risc os . once enabled , the cpu usage should reduce roughly 30 seconds after booting risc os provided that activity is low enough. no 'portable ' module is required to use this feature. this is partly based on code by jeffrey lee . a two-button mouse mode , for use on laptops and similar : this menu option swaps the right and middle mouse buttons , allowing the more common risc os use of select and menu on two-button mouse systems such as laptops . several fixes to the " follow host mouse " feature , which should make it more reliable : correctly interprets os_byte 106 and handles pointer/cursor linking . swis are now intercepted even when called using callaswi , based on a patch by alan buckley. this further improves the reliability of the " follow host mouse " feature . the mouse type will be automatically configured based on the type of emulated machine. previously it was necessary to use ' * configure mousetype ' when changing between risc pc and a7000 emulation . resolved arm bug where rotate could set c flag incorrectly . a possible crash in the dynamic recompiler has been prevented by a fix from tom walker . risc os 4.02 with no vram configured now boots in risc pc emulation . accuracy improvements to emulation of iomd . workaround adc issue on 64bit recompiler which prevented risc os 5.17 from booting . refactoring of code , particularly relating to ram and iomd . windows the window size is now taller by one pixel. previously it was too short , and the very bottom row of the display was missing . some improvements to the gui , including enabling windows " visual styles " so that windows adopt the native look of the os , and improving the layout of the " configure " window . an improved icon , which includes high-resolution variants for windows vista and later . linux some improvements to the gui , including improving the layout of the " configure " window . version 0.8.8 - 19/9/2010 changes in this build solaris the configure script has been updated so rpcemu should now compile on solaris 10 and open solaris without any additional changes . linux the configure script has been updated so that rpcemu should now compile on fedora 13 without any additional changes . windows fix issue where is was possible that the selected processor and the processor chosen in the gui could get out of sync . all platforms fixed 'follow host mouse ' mouse-drag problem that was reported with 0.8.7 . fixed 'follow host mouse ' crash reported when using risc os 4.39 . os version is now written to the rpclog.txt log file , to aid in bug triage . version 0.8.7 - 1/9/2010 changes in this build this release contains lots of updates to the networking support ; as such a new section to the manual has been written explaining how to setup networking on linux and windows : http : //www.marutan.net/rpcemu/manual/network.html the support for risc os 5 has changed a fair amount since the last release . please see the updated documentation here : http : //www.marutan.net/rpcemu/ro5.html windows added networking support using 'bridged ' network style ( leo smiers ) ; works with the win32 tap interface ( from the qemu project ) and uses the openvpn tun/tap drivers . two fixes have reduced the likelihood of encountering a crash when using fullscreen mode . linux and windows network gui : a gui to assist in configuring the network settings is available. for more details see the networking section of the manual mentioned above . all platforms a considerable number of fixes to the accuracy of hostfs as a risc os filing system . added suport for the scrollwheel on ps/2 mouse emulation ; this only works with the arm7500 or arm7500fe ( a7000 and a7000 + are the only hardware with ps2 mouse ports ) . also requires risc os support from risc os select ( not present on earlier versions ) and for you not to be using 'follow host mouse' . improved emulation of the i2c bus and real time clock. allows risc os 5.17 rtc autodetection to work. ( based on code by jochen karrer from the softgun project ) . 'follow host mouse ' is now 32-bit compliant and working on risc os 5 ( timothy coltman ) configure script for source compilation on 'unix ' systems no longer stops if it 's not linux . significant refactoring of code , particularly mouse handling sections , swi handling and networking . version 0.8.6 - 23/12/2009 changes in this build mac os x experimental support for dynarec on intel-based mac os x platforms . all platforms more work refactoring the arm emulation core to simplify and reduce code . several minor arm fixes . added support for arm7500fe and arm810. arm7500fe currently offers no floating-point performance advantage. arm810 is largely experimental and only has limited support from most versions of risc os . fixed two crash bugs in ide code relating to switching between hard disk and cd-rom emulation. thanks to francis devereux for good bug reporting and analysis . simplified and standardised mips display in title bar on all platforms. on linux the mips counter is no longer displayed on the console . significant refactoring of code , particularly the dynarec and sound sections . version 0.8.5 - 23/08/2009 changes in this build compatibility note because the dynarec is no longer restricted to strongarm processor type , you must explicitly choose strongarm emulation to retain full backwards compatibility. either edit the rpc.cfg config file or use the gui to change processor type . note that the dynarec support for processor types other than strongarm is experimental . all platforms add the syncclock module by david ruck ( modified and tested to be 32-bit compatible ) . this module will regularly synchronise the risc os clock with the host machine to compensate for clock drift. it is enabled by default . improvements to co-processor 15 emulation mean that risc os 3.60 correctly no longer works with strongarm emulation ( like real hardware ) . some fixes to mmu emulation regarding virtual to physical address mapping and permission checking . much work refactoring the arm emulation core to simplify and reduce code . minor improvements to iomd relating to interrupt handling . significant refactoring of code , including removal of redundant or duplicate code , and addition of numerous comments . version 0.8.4 - 05/05/2009 changes in this build all platforms experimental support for rool risc os 5.15 iomd rom image . however there are many issues , please follow this link for more details . http : //www.marutan.net/rpcemu/ro5.html fix redraw issues when no vram is configured . continuing source code tidying . linux/macos x mouse following ( mousehack ) can now be configured via the rpc.cfg file . version 0.8.3 - 15/04/2009 changes in this build linux faster 64-bit dynarec code by tom walker all platforms several arm decode and execution bugs fixed , leading to.. . can boot pace risc os 4 and experimental support for risc os 6 preview 3 ( but see known issues below ) fixed screen corruption when using interpreter and strongarm with risc os 4 increasing memory size using gui no longer crashes rpcemu small performance increase to dynarec 32-bit due to refactoring continuing source code tidying known issues risc os 6 preview 3 will only boot with interpreter if processor type is strongarm risc os 6 preview 3 will not yet boot with 64-bit dynarec version 0.8.2 - 09/02/2009 changes in this build windows fix shortcut startin issues . mac os x now compiles and runs on mac os x ( intel ) by timothy coltman , no patching required . all platforms support more fullscreen modes . set the year portion of the time ( stored in cmos ram ) to always be correct , and generate cmos checksum. based on work by kees grinwis . arm processor ids corrected . continuing source code tidying . version 0.8.1 - 16/01/2009 changes in this build windows fixed mapping of \ and # keys . removed console window . correctly return year portion of cmos time . linux and windows correctly return the cmos time , regardless of when it is called . reject rom images that are not 2mb , 4mb or 6mb in size and inform the user. this should prevent people trying to run compressed select rom images directly . continuing source code tidying . version 0.8.0 - 30/12/2008 changes in this build hostfs available out of the box . some hostfs issues resolved rpcemu issue tracker issues resolved . rpci001 - pause/break key is now working . rpci003 - clock is synchronised with host on startup . keyboard repeat issue resolved easy installation on windows developer information we 're very happy for rpcemu to accept code and contributions from third parties , already many people have contributed code and we hope to continue down this route . the rpcemu source is stored inside the mercurial version control system , mercurial clients are available for many platforms , including ( but not limited too ) windows , linux , mac os x , solaris , bsds. if you are used to a different version control system , such as cvs or svn , mercurial ( as a distributed version control system ) may seem a little odd , but there are plenty of tutorials and advice for users coming from other systems on the web . the mercurial repository is based at http : //www.home.marutan.net/hg/rpcemu and checking out the code is as simple as hg clone http : //www.home.marutan.net/hg/rpcemu rpcemu how to get code committed into the repository. prepare a patch file of the differences between your new code and the current 'head ' of the project . mercurial provides the 'hg diff ' command , which generates diff files suitable for this . then post this patch file to the mailing list ( or to us directly if you so wish ) , with an explanation of what it 's for , and in the case of bug fixes , the bug it 's meant to fix ( it 's not always obvious from the code ) generally the smaller the patch , with the most specific function or reason , the easier the patch is to merge in , whereas a " i fixed everything i thought was wrong " would take a very long time to verify and test . patches may get edited before being committed , or if the changes required are particularly large an updated patch may be requested of the developer. in some rare cases it might not be possible to commit a patch , and at that point there should be a stated reason ( e.g. patch overlaps with another patch that deprecates it , patch is too widespread to verify ( suggest breaking into smaller patches ) , etc ) . if you have any questions , once again the mailing list is the best place to ask , also , if you 're considering a particulaly large change , that would affect a large functional area or many files , it might well be worth getting some advice from the developers on the mailing list first , incase it overlaps with other development work , or even just a suggestion of how to accomplish it in smaller changes .
