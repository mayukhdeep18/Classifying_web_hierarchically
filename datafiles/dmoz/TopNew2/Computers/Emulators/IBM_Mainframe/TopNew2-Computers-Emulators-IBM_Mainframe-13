centralnotice hercules ( emulator ) from wikipedia , the free encyclopedia ( redirected from hercules emulator ) jump to : navigation , search hercules original author ( s ) roger bowler developer ( s ) jay maynard , jan jaeger , david " fish " trout , greg smith , bernard van der helm , ivan warren , and many others — see www.hercules-390.eu/hercfaq.html # 6.01 initial release 1999 ( 1999 ) stable release 3.10 / february 1 , 2014 ; 6 months ago ( 2014-02-01 ) preview release 4.00 development status active written in c operating system cross-platform type emulator license q public license website www.hercules-390.eu www.hercules-390.org hercules is a computer emulator which allows software designed for ibm mainframe computers ( system/370 , system/390 , and zseries/system z ) and for plug compatible mainframes ( such as amdahl machines ) to run on other types of computer hardware , notably on low-cost personal computers . although there are other mainframe emulators which perform a similar function , hercules is significant in that it enables private individuals to run mainframe computer software on their own personal computers . hercules runs under multiple parent operating systems including linux , windows , freebsd , solaris , and mac os x and is released under the open source software license qpl . [ 1 ] it is analogous to bochs and qemu in that it emulates cpu instructions and select peripheral devices only. a vendor ( or distributor ) must still provide an operating system , and the user must install it. hercules was notably the first mainframe emulator to incorporate 64-bit z/architecture support , beating out commercial offerings . roger bowler , a mainframe systems programmer , started development of the hercules emulator in 1999. jay maynard currently maintains and hosts the project . contents 1 design 2 operating systems status 3 usage 4 performance 5 turbohercules 6 see also 7 references 8 external links design [ edit ] the emulator is written almost entirely in c . its developers ruled out using machine-specific assembly code to avoid problems with portability even though such code could significantly improve performance. there are two exceptions : hercules uses hardware assists to provide inter-processor consistency when emulating multiple cpus on smp host systems , and hercules uses assembler assists to convert between little-endian and big-endian data on platforms where the operating system provides such services and on x86 / x86-64 processors . operating systems status [ edit ] hercules is technically compatible with all ibm mainframe operating systems , even older versions which no longer run on newer mainframes. however , many mainframe operating systems require vendor licenses to run legally. newer licensed operating systems , such as os/390 , z/os , vse/esa , z/vse , vm/esa , z/vm , tpf/esa , and z/tpf are technically compatible but can not legally run on the hercules emulator except in very limited circumstances , and they must always be licensed from ibm. ibm 's coupling facility control code , which enables parallel sysplex , and uts also require licenses to run . operating systems which may legally be run without license from ibm on hercules include : older ibm operating systems including os/360 , dos/360 , dos/vs , mvs , vm/370 , and tss/370 which are either public domain or " copyrighted software provided without charge. " [ 2 ] the music/sp operating system may be available for educational and demonstration purposes upon request to its copyright holder , mcgill university . some of music/sp 's features , notably networking , require z/vm ( and thus an ibm license ) . however , a complete demonstration version of music/sp , packaged with the alternative sim390 mainframe emulator , is available . the michigan terminal system ( mts ) version 6.0a has been tailored to run under hercules. [ 3 ] there is no known legal restriction that inhibits running the open source operating systems linux on system z and opensolaris for system z on the hercules emulator. they run well on hercules , and many linux on system z developers do their work using hercules. several distributors provide 64-bit z/architecture versions of linux , and some also provide esa/390 -compatible versions. mainframe linux distributions include suse linux enterprise server , red hat enterprise linux , debian gnu/linux , centos , and slackware . sine nomine associates brought opensolaris to system z , relying on features provided by z/vm. emulation of those specific z/vm features for opensolaris is included starting with hercules version 3.07 . certain unencumbered editors and utilities which can run on a mainframe without a parent operating system may be available to run on hercules as well . debian gnu/linux running on hercules usage [ edit ] hercules can be used as a development environment to verify that code is portable ( across linux processor architectures , for example ) , supports symmetric multiprocessing ( smp ) , and is 64-bit " clean. " there is also a large community of current and former mainframe operators and programmers , as well as those with no prior experience , who use hercules and the public domain ibm operating systems as a hobby and for learning purposes. most of the skills acquired when exploring classic ibm mainframe operating system versions are still relevant when transitioning to licensed ibm machines running the latest versions . the open source nature of hercules means that anyone can produce their own customized version of the emulator. for example , a group of developers independent of the hercules project implemented a hybrid mainframe architecture which they dubbed " s/380 " [ 4 ] using modifications to both hercules and to freely available classic versions of mvs , enhancing the latter with some degree of 31-bit binary compatibility with later operating system versions . performance [ edit ] this section needs additional citations for verification . please help improve this article by adding citations to reliable sources . unsourced material may be challenged and removed. ( february 2014 ) it is difficult to determine exactly how hercules emulation performance corresponds to real mainframe hardware , but the performance characteristics are understandably quite different. this is partially due to the difficulty of comparing real mainframe hardware to other pcs and servers as well as the lack of concrete , controlled performance comparisons. performance comparisons are likely legally impossible for licensed ibm operating systems , and those operating systems are quite different from other operating systems , such as linux . hercules expresses its processing performance in mips . due to the age of the earlier system/360 and system/370 hardware , it is a relatively safe assumption that hercules will outperform them when running on moderately powerful hardware , despite the considerable overhead of emulating a computer architecture in software. however , newer , partially or fully configured system z machines outperform hercules by a wide margin. a relatively fast dual processor x86 machine running hercules is capable of sustaining about 50 to 60 mips for code that utilizes both processors in a realistic environment , with sustained rates rising to a reported 300 mips on leading-edge ( early 2009 ) pc-class systems. hercules can produce peaks of over 1200 mips when running in a tight loop , such as in a synthetic instruction benchmark or with other small , compute-intensive programs . tom lehmann , co-founder of turbohercules , wrote : ... we can run a reasonably sized load ( 800 mips with our standard package ) . if the machine in question is larger than that , we can scale to 1600 mips with our quad nehalem based package , and we have been promised an 8 way nehalem ex based machine early next year that should take us to the 3200 mips mark. anything bigger than that is replicated by a collection of systems. [ 5 ] hercules generally outperforms ibm 's pc based mainframes from the mid-1990s , which have an advertised peak performance of around 29 mips. compared to the more powerful but still entry-level ibm multiprise 2000 and 3000 mainframes ( also from the 1990s ) , hercules on typical x86 hardware would be considered a mid-range server in performance terms. for every mainframe after the 9672 generation 1 , hercules would generally be the lowest end system. for comparison , current high-end ibm zenterprise 196 systems can deliver over 52,000 mips per machine , and they have considerable i/o performance advantages. [ citation needed ] with the same number of emulated sys z processors , z/pdt is about 3 times faster than hercules. [ citation needed ] note that there are other non-functional system attributes beyond performance which are typically relevant to mainframe operators . turbohercules [ edit ] in 2009 , roger bowler founded turbohercules sas , based in france , to commercialize the hercules technology. in july , 2009 , turbohercules sas asked ibm to license z/os to its customers for use on systems sold by turbohercules. ibm declined the company 's request. [ 6 ] in march , 2010 , turbohercules sas filed a complaint with european commission regulators , alleging that ibm infringed eu antitrust rules through its alleged tying of mainframe hardware to its mainframe operating system , and the ec opened a preliminary investigation. [ 7 ] in november , 2010 , turbohercules announced that it had received an investment from microsoft corporation. [ 8 ] in september , 2011 , ec regulators closed their investigation without action. [ 9 ] see also [ edit ] pc-based ibm-compatible mainframes - z/architecture and today references [ edit ] ^ list of licenses approved by the open source initiative ^ 2.02 what operating systems can i run legally ? , hercules version 3 : frequently-asked questions ^ " welcome " . michigan terminal system archive . retrieved jan 29 , 2013 . ^ s/380 diagram at sourceforge mvs/380 project site ^ hercules goes commercial ! ^ exchange of letters between turbohercules and ibm ^ european commission press release 26 july 2010 ^ turbohercules news release dated november 23 , 2010 ^ ec press release ( last paragraph ) external links [ edit ] official website hercules ( emulator ) at dmoz hercules , son of z 's ( review on tech-news.com ) public domain os library ( mvs version 3.8 , vm/cms release 6 , dos/vs release 34 , tss/370 version 3 ) public domain software archive ( includes turnkey mvs cd image ) newpp limit report parsed by mw1012 cpu time usage : 0.960 seconds real time usage : 1.081 seconds preprocessor visited node count : 1330/1000000 preprocessor generated node count : 8677/1500000 post ‐ expand include size : 21237/2048000 bytes template argument size : 2517/2048000 bytes highest expansion depth : 21/40 expensive parser function count : 4/500 lua time usage : 0.171/10.000 seconds lua memory usage : 2.1 mb/50 mb saved in parser cache with key enwiki : pcache : idhash : 55374-0 ! * ! 0 ! default ! ! en ! 4 ! * and timestamp 20140810074413 and revision id 615938582 retrieved from " http : //en.wikipedia.org/w/index.php ? title = hercules_ ( emulator ) &oldid = 615938582 " categories : linux emulation software free emulation software os x emulation software windows emulation software ibm system/360 mainframe line hidden categories : articles needing additional references from february 2014 all articles needing additional references all articles with unsourced statements articles with unsourced statements from june 2013 articles with dmoz links use dmy dates from september 2010 navigation menu personal tools create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikimedia shop interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create a book download as pdf printable version languages deutsch italiano р у с с к и й suomi у к р а ї н с ь к а 中 文 edit links this page was last modified on 7 july 2014 at 12 : 01 . text is available under the creative commons attribution-sharealike license ; additional terms may apply. by using this site , you agree to the terms of use and privacy policy . wikipedia ® is a registered trademark of the wikimedia foundation , inc. , a non-profit organization . privacy policy about wikipedia disclaimers contact wikipedia developers mobile view
